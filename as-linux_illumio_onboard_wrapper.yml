---
- name: IF ILLUMIO VEN IS NOT INSTALLED, CHECK PREREQUISITES AND INSTALL
  hosts: all
  become: yes
  vars_files:
    - as_vars.yml
#    - as_vmware_vars.yml
  tasks:
    - name: check installed software
      package_facts:
        manager: auto

    - name: Check if VEN is installed
      command: yum list installed illumio-ven
      register: ven_installed
      changed_when: false
      ignore_errors: true
      check_mode: no
      failed_when: false

#    - name: debug - ven_installed
#      debug:
#        var: ven_installed

    - block:
        # cleanup any previous failed run artifacts
        - name: cleanup artifacts of failed previous run - onboarding script
          file:
            state: absent
            path: /export/home/{{ ansible_user }}/onboarding.sh
          become: yes
          failed_when: false

        # cleanup any previous failed run artifacts
        - name: Delete content & directory
          file:
            state: absent
            path: /opt/illumio_ven/
          become: yes
          failed_when: false

        - name: pre-install, disable yum sslverify to correct OUL yum repo errors
          lineinfile:
             path: /etc/yum.conf
             line: sslverify=false
             create: yes
           backup: yes
          when: (ansible_distribution_file_variety == "OracleLinux" and ansible_distribution_major_version == "6")

        # check for Illumio VEN pre-requisites
        - include: ./roles/prereqs/tasks/main.yml

        # if pre-requisites check out, push the script and run it
        - name: push the onboarding script
          copy: src=./files/onboarding.sh dest=/export/home/{{  ansible_user }} mode=0777
          become: yes

        # run the onboarding script
        - name: run the onboarding script
          command: sh /export/home/{{  ansible_user }}/onboarding.sh
          become: yes

        - name: postr-install, re-enable yum sslverify on OUL6
          lineinfile:
             path: /etc/yum.conf
             line: sslverify=true
             create: yes
           backup: yes
          when: (ansible_distribution_file_variety == "OracleLinux" and ansible_distribution_major_version == "6")


#        - name: post-install, reset SYS_MAX_UID
#          replace:
#            path: /etc/login.defs
#            regexp: '(^SYS_UID_MAX)(.*)$'
#            replace: 'SYS_UID_MAX     102'
#          backup: yes
#      when: (ansible_distribution_file_variety == "RedHat" and ansible_distribution_major_version == "8")
#          when: (ansible_distribution_file_variety == "RedHat" or ansible_distribution_file_variety == "OracleLinux")

      when:
         - ven_installed.rc | default(0) != 0    # only execute the block if the VEN is NOT installed already
#         - inventory_hostname in lookup('inventory_hostnames', 'rhel8_64Guest', 'rhel7_64Guest', 'rhel6_64Guest', 'rhel6Guest', 'rhel5_64Guest', 'rhel5Guest', 'rhel4_64Guest', 'rhel4Guest', 'oracleLinux8_64Guest', 'oracleLinux64Guest')
#         - guest.hostName is match(\w*(qa|ts|dv)\w*)
#         - guest.hostName is not match(\w*(s4a)\w*)
